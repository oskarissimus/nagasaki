# generated by datamodel-codegen:
#   filename:  finance_quote.json
#   timestamp: 2022-03-06T03:04:47+00:00

from __future__ import annotations

from decimal import Decimal
from typing import Any, List

from pydantic import BaseModel


class ResultItem(BaseModel):
    language: str
    region: str
    quoteType: str
    quoteSourceName: str
    triggerable: bool
    customPriceAlertConfidence: str
    currency: str
    shortName: str
    fiftyTwoWeekLow: Decimal
    fiftyTwoWeekHigh: Decimal
    fiftyDayAverage: Decimal
    twoHundredDayAverage: Decimal
    regularMarketChange: Decimal
    regularMarketChangePercent: Decimal
    regularMarketPrice: Decimal
    regularMarketDayHigh: Decimal
    regularMarketDayLow: Decimal
    regularMarketPreviousClose: Decimal
    bid: Decimal
    ask: Decimal
    regularMarketOpen: Decimal
    exchange: str
    messageBoardId: str
    exchangeTimezoneName: str
    exchangeTimezoneShortName: str
    gmtOffSetMilliseconds: int
    market: str
    esgPopulated: bool
    averageDailyVolume3Month: int
    averageDailyVolume10Day: int
    fiftyTwoWeekLowChange: Decimal
    fiftyTwoWeekLowChangePercent: Decimal
    fiftyTwoWeekRange: str
    fiftyTwoWeekHighChange: int
    fiftyTwoWeekHighChangePercent: int
    fiftyDayAverageChange: Decimal
    fiftyDayAverageChangePercent: Decimal
    twoHundredDayAverageChange: Decimal
    twoHundredDayAverageChangePercent: Decimal
    sourceInterval: int
    exchangeDataDelayedBy: int
    tradeable: bool
    marketState: str
    firstTradeDateMilliseconds: int
    priceHint: int
    regularMarketTime: int
    regularMarketDayRange: str
    regularMarketVolume: int
    bidSize: int
    askSize: int
    fullExchangeName: str
    symbol: str


class QuoteResponse(BaseModel):
    result: List[ResultItem]
    error: Any


class Model(BaseModel):
    quoteResponse: QuoteResponse
